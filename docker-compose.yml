version: '3'

services:
  wordpress:
    build:
      context: .
      dockerfile: Dockerfile.wordpress
    platform: linux/arm64
    ports:
      - "8080:80"
      - "8000:8000"
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_URL: http://localhost:8080
      WORDPRESS_ADMIN_USER: admin
      WORDPRESS_ADMIN_PASSWORD: password
      WORDPRESS_ADMIN_EMAIL: admin@example.com
      ELASTICSEARCH_URL: http://elasticsearch:9200
    volumes:
      - ./wp-content:/var/www/html/wp-content
      - ./source-file-interceptor:/var/www/html/wp-content/plugins/source-file-interceptor
      - ./logs:/var/www/html/logs
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - db
      - elasticsearch

  db:
    image: mariadb:10.5
    platform: linux/arm64
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - db_data:/var/lib/mysql

  test-tools:
    build:
      context: .
      dockerfile: Dockerfile.testtools
    platform: linux/arm64
    volumes:
      - ./logs:/logs
    depends_on:
      - wordpress

  frontend:
    image: nginx:1.21-alpine
    platform: linux/arm64
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./logs:/usr/share/nginx/html/logs
    depends_on:
      - wordpress

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.2
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    cap_add:
      - IPC_LOCK
    volumes:
      - ./elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.15.2
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200    # address of elasticsearch docker container which kibana will connect
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch                                   # kibana will start when elasticsearch has started

volumes:
  db_data:
